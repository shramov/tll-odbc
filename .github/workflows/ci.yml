name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04]
        compiler: [gcc]
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: true
    - name: update
      run: |
        echo deb https://psha.org.ru/debian/ `echo ${{ matrix.os }} | tr -d -` contrib backports | sudo tee /etc/apt/sources.list.d/psha.org.ru.list
        sudo wget -O/etc/apt/trusted.gpg.d/psha.org.ru.gpg https://psha.org.ru/debian/pubkey.gpg
        sudo apt update
    - name: install deps
      run: sudo apt install ccache cmake meson pkg-config libfmt-dev libtll-dev python3-pytest python3-decorator python3-tll unixodbc-dev libsqliteodbc odbc-postgresql python3-pyodbc
    - name: configure
      run: meson build
    - name: build
      run: ninja -vC build -j2
    - name: test
      run: |
        meson test -C build --no-rebuild --print-errorlogs -v
    - name: test-postgres
      run: |
        cat > ~/.odbc.ini << EOF
        [testdb]
        Description         = PostgreSQL
        Driver              = PostgreSQL Unicode
        Servername          = localhost
        Port                = 5432
        Database            = postgres
        UserName            = postgres
        Password            = postgres
        ReadOnly            = No
        ConnSettings        =
        EOF
        TEST_DSN=testdb python3 -m pytest --log-level=DEBUG --log-format='%(relativeCreated) 10.3f %(levelname)-7s %(name)s: %(message)s' -v tests

# vim: sts=2 sw=2 et
